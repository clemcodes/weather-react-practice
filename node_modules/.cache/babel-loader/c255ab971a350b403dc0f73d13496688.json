{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cl3m3nt1n3/Desktop/web-projects/tutorial-project/react-weather-app/weather-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nconst api = {\n  key: \"5db34e0412eb9a583bd50ed3d8f0d52b\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = event => {\n    if (event.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metrics&appid=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDate()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), typeof weather.main != \"undefined\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location\",\n          children: [weather.name, \", \", weather.sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: dateBuilder(new Date())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temp\",\n          children: \"15\\xB0c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather\",\n          children: \"Sunny\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WfIlIcXSxCUve4W/aFy4QSWUDkM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/cl3m3nt1n3/Desktop/web-projects/tutorial-project/react-weather-app/weather-react/src/App.js"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","event","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDate","date","month","getMonth","year","getFullYear","e","target","value","main","name","sys","country","Date"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE,kCADK;AAEVC,EAAAA,IAAI,EAAC;AAFK,CAAZ;;AAKA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMS,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAGA,KAAK,CAACR,GAAN,KAAc,OAAjB,EAA0B;AACxBS,MAAAA,KAAK,CAAE,GAAEV,GAAG,CAACE,IAAK,aAAYE,KAAM,wBAAuBJ,GAAG,CAACC,GAAI,EAA9D,CAAL,CACGU,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACdP,QAAAA,UAAU,CAACO,MAAD,CAAV;AACAT,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,OANH;AAOD;AACF,GAVD;;AAYA,QAAMG,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAb;AACA,QAAIC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;AAEA,QAAIC,GAAG,GAAGD,IAAI,CAACF,CAAC,CAACI,OAAF,EAAD,CAAd;AACA,QAAIC,IAAI,GAAGL,CAAC,CAACI,OAAF,EAAX;AACA,QAAIE,KAAK,GAAGL,MAAM,CAACD,CAAC,CAACO,QAAF,EAAD,CAAlB;AACA,QAAIC,IAAI,GAAGR,CAAC,CAACS,WAAF,EAAX;AAEA,WAAQ,GAAEN,GAAI,IAAGE,IAAK,IAAGC,KAAM,IAAGE,IAAK,EAAvC;AAED,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,YAFZ;AAGE,UAAA,WAAW,EAAC,WAHd;AAIE,UAAA,QAAQ,EAAEE,CAAC,IAAIvB,QAAQ,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJzB;AAKE,UAAA,KAAK,EAAE1B,KALT;AAME,UAAA,UAAU,EAAEI;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAYI,OAAOF,OAAO,CAACyB,IAAf,IAAuB,WAZ3B,eAaE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACN;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,qBAA2BzB,OAAO,CAAC0B,IAAnC,QAA2C1B,OAAO,CAAC2B,GAAR,CAAYC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADM,eAEN;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBjB,WAAW,CAAC,IAAIkB,IAAJ,EAAD;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFM;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAiBE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAzDQhC,G;;KAAAA,G;AA2DT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst api = {\n  key: \"5db34e0412eb9a583bd50ed3d8f0d52b\",\n  base:\"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = event => {\n    if(event.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metrics&appid=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n    }\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    \n    let day = days[d.getDate()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`;\n    \n  }\n\n  return (\n    <div className=\"app\">\n      <main>\n        <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n            \n          />\n        </div>\n        {(typeof weather.main != \"undefined\")}\n        <div className=\"location-box\">\n  <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n  <div className=\"date\">{dateBuilder(new Date())}</div>\n        </div>\n        <div className=\"weather-box\">\n          <div className=\"temp\">\n            15Â°c\n          </div>\n          <div className=\"weather\">Sunny</div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}